package com.revature.interfaces;

import org.apache.log4j.Logger;

import com.revature.util.singleton.jdbc.ConnectionUtil;

/**
 * DAO generic interface
 * @author Bobby McGetrick
 *
 * @param <T>
 */
public interface DAO<T> {
	
	/************************************************************************************
	 * Fields
	 ************************************************************************************/
	Logger log = Logger.getRootLogger();
	ConnectionUtil connUtil = ConnectionUtil.getConnectionUtil();
	
	/************************************************************************************
	 * Create
	 ************************************************************************************/
	int create(T arg0);
	
	/************************************************************************************
	 * Retrieve
	 ************************************************************************************/
	T get(int id);
	T get(String string);
	
	/************************************************************************************
	 * Update
	 ************************************************************************************/
	void update(T arg0);
	
	/************************************************************************************
	 * Delete
	 ************************************************************************************/
	void delete(T arg0);

}
//package com.revature.interfaces;
//
//import org.apache.log4j.Logger;
//
//import com.revature.beans.User;
//
///**
// * DAO generic interface
// * @author ramjr
// *
// * @param <T>
// */
//public interface DAO {
//	
//	/************************************************************************************
//	 * Fields
//	 ************************************************************************************/
//	Logger log = Logger.getRootLogger();
//	
//	/************************************************************************************
//	 * Create
//	 ************************************************************************************/
//	int create(User arg0);
//	
//	/************************************************************************************
//	 * Retrieve
//	 ************************************************************************************/
//	User get(int id);
//	
//	/************************************************************************************
//	 * Update
//	 ************************************************************************************/
//	void update(User arg0);
//	
//	/************************************************************************************
//	 * Delete
//	 ************************************************************************************/
//	void delete(User arg0);
//
//}
