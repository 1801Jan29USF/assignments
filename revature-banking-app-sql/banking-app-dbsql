

/*******************************************************************************
   Drop database if it exists
********************************************************************************/
DROP USER revaturebank CASCADE;

/*******************************************************************************
   Create database
********************************************************************************/
CREATE USER revaturebank
IDENTIFIED BY p4ssw0rd
DEFAULT TABLESPACE users
TEMPORARY TABLESPACE temp
QUOTA 10M ON users;

GRANT connect to revaturebank;
GRANT resource to revaturebank;
GRANT create session TO revaturebank;
GRANT create table TO revaturebank;
GRANT create view TO revaturebank;



conn revaturebank/p4ssw0rd


/*******************************************************************************
   Create User Table
********************************************************************************/
CREATE TABLE user_account
(
    user_id NUMBER PRIMARY KEY,
    username VARCHAR2(500),
    pass VARCHAR2(500) NOT NULL,
    checking number NOT NULL,
    savings number NOT NULL
);


/*******************************************************************************
   Create Transaction Table
********************************************************************************/
CREATE TABLE transactions
(   
    transaction_id NUMBER PRIMARY KEY,
    user_id NUMBER NOT NULL
);

/*******************************************************************************
   Sequences
********************************************************************************/
CREATE SEQUENCE user_id_seq START WITH 1;
/*******************************************************************************
   Triggers
********************************************************************************/

CREATE OR REPLACE TRIGGER user_id_trigger
BEFORE INSERT OR UPDATE on user_account
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        SELECT user_id_seq.nextVal INTO :new.user_id FROM dual;
    ELSIF UPDATING THEN
        SELECT :old.user_id INTO :new.user_id FROM dual;
    END IF;
END;
/

commit;
exit;